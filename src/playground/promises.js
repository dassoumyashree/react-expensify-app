const promise = new Promise((resolve, reject) => {
    // long running async. task
    setTimeout(() => {
        // resolve({
        //     name: 'Andrew',
        //     age: 26
        // });
        reject('Something wrong')
        
    }, 5000);
    
});

// promises will be created for us. code like this lives inside of firebase lib.
// we use a lot of promises. promises that get generated by method calls like set()

console.log('before');

// registering callbacks with .then
promise.then((data) => {
    console.log('1', data);
}, (error) => {
    console.log('error: ', error);
});
// .catch((error) => {
//     console.log('error: ', error);
// });

// promise.then((data) => {
//     console.log('2', data);
// });

console.log('after');

